{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/Gifgrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","Gifgrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAc5C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAY,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,OAKd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaXM,GAbW,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKU,MAAOA,EAAOM,IAAI,KACjC,2BAAIN,KCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAd,GACnBY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAGlB,CAACpB,IAEGqB,EDZ2BI,CAAazB,GAAjCa,EADuB,EAC7BN,KAAca,EADe,EACfA,QAOtB,OACI,oCACI,wBAAIJ,UAAU,sCAAsChB,GACnDoB,GAAW,uBAAGJ,UAAU,qCAAb,WACZ,yBAAKA,UAAU,aACVH,EAAOJ,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eACIgB,IAAKhB,EAAIC,IACLD,UEjBfiB,EAAe,WAAM,MAGMzC,mBAAS,CAAC,gBAHhB,mBAGvB0C,EAHuB,KAGXC,EAHW,KAU9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAa5C,YAAa4C,IAC1B,6BACA,4BAEQD,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CAAS0B,IAAK1B,EAAUA,SAAUA,UCjB1D8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.914b105a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategory }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategory(cats => [inputValue, ...cats])\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=zAAiXRkbWo8JFsB08NmzsowfsFIaIE8H`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return (gifs);\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} title={title} alt=\"\"/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React/*, { useState, useEffect }*/ from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const Gifgrid = ({ category }) => {\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    /*const [images, setImages] = useState([]);\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => setImages(imgs));\r\n    }, [category]);*/\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated  animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated  animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {images.map((img) => (\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                ))}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(img => {\r\n            setstate({\r\n                data: img,\r\n                loading: false\r\n            });\r\n        });\r\n    }, [category]);\r\n\r\n    return state;//{data:[],loading:true}\r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { Gifgrid } from './components/Gifgrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = [\"One Punch\", \"Samurai X\", \"Dragon Ball\"]\r\n    const [categories, setCategories] = useState([\"Dragon Ball\"]);\r\n\r\n    /*const handleAdd=()=>{\r\n        //setCategories([...categories,'Hunter']);\r\n        setCategories(cats=>[...cats,'Hunter']);\r\n    }*/\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategory={setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <Gifgrid key={category} category={category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}